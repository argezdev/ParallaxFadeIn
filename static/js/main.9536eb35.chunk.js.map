{"version":3,"sources":["store.js","blocks.js","components/Text.js","diamonds/BackfaceMaterial.js","diamonds/RefractionMaterial.js","diamonds/Diamonds.js","components/CustomMaterial.js","components/Plane.js","index.js"],"names":["state","sections","pages","zoom","paragraphs","offset","factor","header","image","aspect","text","stripes","color","height","diamonds","x","pos","Vector3","scale","top","createRef","offsetContext","createContext","Block","children","props","useBlock","parentOffset","sectionHeight","ref","useRef","undefined","useFrame","curY","current","position","y","curTop","lerp","Provider","value","useThree","size","viewport","useContext","viewportWidth","width","viewportHeight","canvasWidth","canvasHeight","mobile","margin","contentMaxWidth","offsetFactor","Text","left","right","bottom","opacity","layers","font","data","useLoader","FontLoader","geom","usePromise","Promise","res","TextBufferGeometry","curveSegments","onUpdate","useCallback","self","box","geometry","computeBoundingBox","boundingBox","getSize","last","shift","frustumCulled","attach","transparent","MultilineText","lineHeight","split","map","index","key","BackfaceMaterial","vertexShader","fragmentShader","side","BackSide","ShaderMaterial","RefractionMaterial","options","uniforms","envMap","backfaceMap","resolution","dummy","Object3D","Diamonds","gltf","GLTFLoader","useMemo","scene","center","gl","camera","clock","model","ratio","getPixelRatio","envFbo","WebGLRenderTarget","backfaceFbo","texture","backfaceMaterial","refractionMaterial","forEach","i","t","getElapsedTime","s","set","copy","length","rotation","updateMatrix","setMatrixAt","matrix","instanceMatrix","needsUpdate","autoClear","setRenderTarget","clearColor","render","clearDepth","material","args","__$","CustomMaterial","hasTexture","Color","this","extend","Plane","forwardRef","Startup","Paragraph","w","alignRight","pixelWidth","style","textAlign","tabIndex","Content","images","TextureLoader","minFilter","LinearFilter","Math","PI","className","target","href","ReactDOM","scrollArea","onScroll","e","scrollTop","useEffect","concurrent","pixelRatio","orthographic","fallback","Array","fill","_","id","document","getElementById"],"mappings":"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","file":"static/js/main.9536eb35.chunk.js","sourcesContent":["import { createRef } from \"react\"\nimport { Vector3 } from \"three\"\n\nconst state = {\n  sections: 9,\n  pages: 8,\n  zoom: 75,\n  paragraphs: [\n    {\n      offset: 1,\n      factor: 1.75,\n      header: \"District 4\",\n      image: \"/photo-1515036551567-bf1198cccc35.jpeg\",\n      aspect: 1.51,\n      text: \"Two thousand pharmacologists and bio-chemists were subsidized. Six years later it was being produced commercially.\"\n    },\n    {\n      offset: 2,\n      factor: 2.0,\n      header: \"Diamond Road\",\n      image: \"/photo-1519608487953-e999c86e7455.jpeg\",\n      aspect: 1.5,\n      text:\n        \"The man who comes back through the Door in the Wall will never be quite the same as the man who went out. He will be wiser but less sure, happier but less self-satisfied, humbler in acknowledging his ignorance yet better equipped to understand the relationship of words to things, of systematic reasoning to the unfathomable mystery which it tries, forever vainly, to comprehend.\"\n    },\n    {\n      offset: 3,\n      factor: 2.25,\n      header: \"Catalina\",\n      image: \"/ph1.jpg\",\n      aspect: 1.5037,\n      text:\n        \"The substance can take you to heaven but it can also take you to hell. Or else to both, together or alternately. Or else (if you're lucky, or if you've made yourself ready) beyond either of them. And then beyond the beyond, back to where you started from — back to here, back to New Rotham sted, back to business as usual. Only now, of course, business as usual is completely different.\"\n    },\n    {\n      offset: 4,\n      factor: 2.0,\n      header: \"Building 21\",\n      image: \"/ph3.jpg\",\n      aspect: 0.665,\n      text:\n        \"We’ve found that the people whose EEG doesn’t show any alpha-wave activity when they’re relaxed aren’t likely to respond significantly to the substance. That means that, for about fifteen percent of the population, we have to find other approaches to liberation.\"\n    },\n    {\n      offset: 5,\n      factor: 1.75,\n      header: \"Sector 8\",\n      image: \"/photo-1533577116850-9cc66cad8a9b.jpeg\",\n      aspect: 1.55,\n      text:\n        \"By cultivating the state of mind that makes it possible for the dazzling ecstatic insights to become permanent and habitual illuminations. By getting to know oneself to the point where one won’t be compelled by one’s unconscious to do all the ugly, absurd, self-stultifying things that one so often finds oneself doing.\"\n    },\n    { offset: 7, factor: 1.05, header: \"The Factory\", image: \"/photo-1548191265-cc70d3d45ba1.jpeg\", aspect: 1.77, text: \"Education and enlightenment.\" }\n  ],\n  stripes: [\n    { offset: 0, color: \"#000\", height: 13 },\n    { offset: 6.3, color: \"#000\", height: 20 }\n  ],\n  diamonds: [\n    { x: 0, offset: 0.15, pos: new Vector3(), scale: 0.6, factor: 1.8 },\n    { x: 2, offset: 1.1, pos: new Vector3(), scale: 0.8, factor: 2.1 },\n    { x: -5, offset: 2, pos: new Vector3(), scale: 0.8, factor: 2.5 },\n    { x: 0, offset: 3.2, pos: new Vector3(), scale: 0.8, factor: 1.75 },\n    { x: 0, offset: 4, pos: new Vector3(), scale: 0.8, factor: 2.5 },\n    { x: 2, offset: 5.5, pos: new Vector3(), scale: 1.25, factor: 0.85 },\n    { x: -5, offset: 7, pos: new Vector3(), scale: 0.8, factor: 2 },\n    { x: 0, offset: 8, pos: new Vector3(), scale: 1.5, factor: 6 }\n  ],\n  top: createRef()\n}\n\nexport default state\n","import React, { createContext, useRef, useContext } from \"react\"\nimport { useFrame, useThree } from \"react-three-fiber\"\nimport lerp from \"lerp\"\nimport state from \"./store\"\n\nconst offsetContext = createContext(0)\n\nfunction Block({ children, offset, factor, ...props }) {\n  const { offset: parentOffset, sectionHeight } = useBlock()\n  const ref = useRef()\n  offset = offset !== undefined ? offset : parentOffset\n  useFrame(() => {\n    const curY = ref.current.position.y\n    const curTop = state.top.current\n    ref.current.position.y = lerp(curY, (curTop / state.zoom) * factor, 0.1)\n  })\n  return (\n    <offsetContext.Provider value={offset}>\n      <group {...props} position={[0, -sectionHeight * offset * factor, 0]}>\n        <group ref={ref}>{children}</group>\n      </group>\n    </offsetContext.Provider>\n  )\n}\n\nfunction useBlock() {\n  const { sections, pages, zoom } = state\n  const { size, viewport } = useThree()\n  const offset = useContext(offsetContext)\n  const viewportWidth = viewport.width\n  const viewportHeight = viewport.height\n  const canvasWidth = viewportWidth / zoom\n  const canvasHeight = viewportHeight / zoom\n  const mobile = size.width < 700\n  const margin = canvasWidth * (mobile ? 0.2 : 0.1)\n  const contentMaxWidth = canvasWidth * (mobile ? 0.8 : 0.6)\n  const sectionHeight = canvasHeight * ((pages - 1) / (sections - 1))\n  const offsetFactor = (offset + 1.0) / sections\n  return {\n    viewport,\n    offset,\n    viewportWidth,\n    viewportHeight,\n    canvasWidth,\n    canvasHeight,\n    mobile,\n    margin,\n    contentMaxWidth,\n    sectionHeight,\n    offsetFactor\n  }\n}\n\nexport { Block, useBlock }\n","import { FontLoader, Vector3, TextBufferGeometry } from \"three\"\nimport React, { useCallback, useRef } from \"react\"\nimport { useLoader, useFrame } from \"react-three-fiber\"\nimport usePromise from \"react-promise-suspense\"\nimport lerp from \"lerp\"\nimport state from \"../store\"\n\nfunction Text({ children, size = 1, left, right, top, bottom, color = \"white\", opacity = 1, height = 0.01, layers = 0, font = \"/MOONGET_Heavy.blob\", ...props }) {\n  const data = useLoader(FontLoader, font)\n  const geom = usePromise(() => new Promise(res => res(new TextBufferGeometry(children, { font: data, size: 1, height, curveSegments: 32 }))), [children])\n  const onUpdate = useCallback(\n    self => {\n      const box = new Vector3()\n      self.geometry.computeBoundingBox()\n      self.geometry.boundingBox.getSize(box)\n      self.position.x = left ? 0 : right ? -box.x : -box.x / 2\n      self.position.y = top ? 0 : bottom ? -box.y : -box.y / 2\n    },\n    [left, right, top, bottom]\n  )\n\n  const ref = useRef()\n  let last = state.top.current\n  useFrame(() => {\n    ref.current.shift = lerp(ref.current.shift, (state.top.current - last) / 100, 0.1)\n    last = state.top.current\n  })\n\n  return (\n    <group {...props} scale={[size, size, 0.1]}>\n      <mesh geometry={geom} onUpdate={onUpdate} frustumCulled={false}>\n        <customMaterial ref={ref} attach=\"material\" color={color} transparent opacity={opacity} />\n      </mesh>\n    </group>\n  )\n}\n\nconst MultilineText = ({ text, size = 1, lineHeight = 1, position = [0, 0, 0], ...props }) =>\n  text.split(\"\\n\").map((text, index) => <Text key={index} size={size} {...props} position={[position[0], position[1] - index * lineHeight, position[2]]} children={text} />)\n\nexport { Text, MultilineText }\n","import { ShaderMaterial, BackSide } from \"three\"\n\nexport default class BackfaceMaterial extends ShaderMaterial {\n  constructor() {\n    super({\n      vertexShader: `varying vec3 worldNormal;\n      void main() {\n        vec4 transformedNormal = vec4(normal, 0.);\n        vec4 transformedPosition = vec4(position, 1.0);\n        #ifdef USE_INSTANCING\n          transformedNormal = instanceMatrix * transformedNormal;\n          transformedPosition = instanceMatrix * transformedPosition;\n        #endif\n        worldNormal = normalize(modelViewMatrix * transformedNormal).xyz;\n        gl_Position = projectionMatrix * modelViewMatrix * transformedPosition;\n      }`,\n      fragmentShader: `varying vec3 worldNormal;\n      void main() {\n        gl_FragColor = vec4(worldNormal, 1.0);\n      }`,\n      side: BackSide\n    })\n  }\n}\n","import { ShaderMaterial } from \"three\"\n\nexport default class RefractionMaterial extends ShaderMaterial {\n  constructor(options) {\n    super({\n      vertexShader: `varying vec3 worldNormal;\n      varying vec3 viewDirection;\n      void main() {\n        vec4 transformedNormal = vec4(normal, 0.);\n        vec4 transformedPosition = vec4(position, 1.0);\n        #ifdef USE_INSTANCING\n          transformedNormal = instanceMatrix * transformedNormal;\n          transformedPosition = instanceMatrix * transformedPosition;\n        #endif\n        worldNormal = normalize( modelViewMatrix * transformedNormal).xyz;\n        viewDirection = normalize((modelMatrix * vec4( position, 1.0)).xyz - cameraPosition);;\n        gl_Position = projectionMatrix * modelViewMatrix * transformedPosition;\n      }`,\n      fragmentShader: `uniform sampler2D envMap;\n      uniform sampler2D backfaceMap;\n      uniform vec2 resolution;\n      varying vec3 worldNormal;\n      varying vec3 viewDirection;\n      float fresnelFunc(vec3 viewDirection, vec3 worldNormal) {\n        return pow(1.05 + dot(viewDirection, worldNormal), 100.0);\n      }\n      void main() {\n        vec2 uv = gl_FragCoord.xy / resolution;\n        vec3 normal = worldNormal * (1.0 - 0.7) - texture2D(backfaceMap, uv).rgb * 0.7;\n        vec4 color = texture2D(envMap, uv += refract(viewDirection, normal, 1.0/1.5).xy);\n        //gl_FragColor = vec4(mix(color.rgb, vec3(0.15), fresnelFunc(viewDirection, normal)), 1.0);\n        gl_FragColor = vec4(mix(color.rgb, vec3(0.4), fresnelFunc(viewDirection, normal)), 1.0);\n      }`,\n      uniforms: {\n        envMap: { value: options.envMap },\n        backfaceMap: { value: options.backfaceMap },\n        resolution: { value: options.resolution }\n      }\n    })\n  }\n}\n","import { WebGLRenderTarget, Object3D } from \"three\"\nimport React, { useRef, useMemo } from \"react\"\nimport { useLoader, useThree, useFrame } from \"react-three-fiber\"\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\"\nimport lerp from \"lerp\"\nimport BackfaceMaterial from \"./BackfaceMaterial\"\nimport RefractionMaterial from \"./RefractionMaterial\"\nimport { useBlock } from \"../blocks\"\nimport state from \"../store\"\n\nconst dummy = new Object3D()\nexport default function Diamonds() {\n  const gltf = useLoader(GLTFLoader, \"/diamond.glb\")\n  useMemo(() => gltf.scene.children[0].geometry.center(), [])\n\n  const { size, gl, scene, camera, clock } = useThree()\n  const { contentMaxWidth, sectionHeight, mobile } = useBlock()\n  const model = useRef()\n  const ratio = gl.getPixelRatio()\n\n  const [envFbo, backfaceFbo, backfaceMaterial, refractionMaterial] = useMemo(() => {\n    const envFbo = new WebGLRenderTarget(size.width * ratio, size.height * ratio)\n    const backfaceFbo = new WebGLRenderTarget(size.width * ratio, size.height * ratio)\n    const backfaceMaterial = new BackfaceMaterial()\n    const refractionMaterial = new RefractionMaterial({\n      envMap: envFbo.texture,\n      backfaceMap: backfaceFbo.texture,\n      resolution: [size.width * ratio, size.height * ratio]\n    })\n    return [envFbo, backfaceFbo, backfaceMaterial, refractionMaterial]\n  }, [size, ratio])\n\n  useFrame(() => {\n    state.diamonds.forEach((data, i) => {\n      const t = clock.getElapsedTime() / 2\n      const { x, offset, scale, factor } = data\n      const s = (contentMaxWidth / 35) * scale\n      data.pos.set(mobile ? 0 : x, lerp(data.pos.y, -sectionHeight * offset * factor + (state.top.current / state.zoom) * factor, 0.1), 0)\n      dummy.position.copy(data.pos)\n      if (i === state.diamonds.length - 1) dummy.rotation.set(0, t, 0)\n      else dummy.rotation.set(t, t, t)\n      dummy.scale.set(s, s, s)\n      dummy.updateMatrix()\n      model.current.setMatrixAt(i, dummy.matrix)\n      model.current.instanceMatrix.needsUpdate = true\n    })\n\n    gl.autoClear = false\n    camera.layers.set(0)\n    gl.setRenderTarget(envFbo)\n    gl.clearColor()\n    gl.render(scene, camera)\n    gl.clearDepth()\n    camera.layers.set(1)\n    model.current.material = backfaceMaterial\n    gl.setRenderTarget(backfaceFbo)\n    gl.clearDepth()\n    gl.render(scene, camera)\n    camera.layers.set(0)\n    gl.setRenderTarget(null)\n    gl.render(scene, camera)\n    gl.clearDepth()\n    camera.layers.set(1)\n    model.current.material = refractionMaterial\n    gl.render(scene, camera)\n  }, 1)\n\n  return (\n    <instancedMesh ref={model} layers={1} args={[null, null, state.diamonds.length]} position={[0, 0, 50]}>\n      <bufferGeometry attach=\"geometry\" {...gltf.__$[1].geometry} />\n    </instancedMesh>\n  )\n}\n","import { ShaderMaterial, Color } from \"three\"\nimport { extend } from \"react-three-fiber\"\n\nclass CustomMaterial extends ShaderMaterial {\n  constructor() {\n    super({\n      vertexShader: `uniform float scale;\n      uniform float shift;\n      varying vec2 vUv;\n      void main() {\n        vec3 pos = position;\n        pos.y = pos.y + ((sin(uv.x * 3.1415926535897932384626433832795) * shift * 1.5) * 0.125);\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(pos,1.);\n      }`,\n      fragmentShader: `uniform sampler2D texture;\n      uniform float hasTexture;\n      uniform float shift;\n      uniform float scale;\n      uniform vec3 color;\n      uniform float opacity;\n      varying vec2 vUv;\n      void main() {\n        float angle = 1.55;\n        vec2 p = (vUv - vec2(0.5, 0.5)) * (1.0 - scale) + vec2(0.5, 0.5);\n        vec2 offset = shift / 4.0 * vec2(cos(angle), sin(angle));\n        vec4 cr = texture2D(texture, p + offset);\n        vec4 cga = texture2D(texture, p);\n        vec4 cb = texture2D(texture, p - offset);\n        if (hasTexture == 1.0) gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);\n        else gl_FragColor = vec4(color, opacity);\n      }`,\n      uniforms: {\n        texture: { value: null },\n        hasTexture: { value: 0 },\n        scale: { value: 0 },\n        shift: { value: 0 },\n        opacity: { value: 1 },\n        color: { value: new Color(\"white\") }\n      }\n    })\n  }\n\n  set scale(value) {\n    this.uniforms.scale.value = value\n  }\n\n  get scale() {\n    return this.uniforms.scale.value\n  }\n\n  set shift(value) {\n    this.uniforms.shift.value = value\n  }\n\n  get shift() {\n    return this.uniforms.shift.value\n  }\n\n  set map(value) {\n    this.uniforms.hasTexture.value = !!value\n    this.uniforms.texture.value = value\n  }\n\n  get map() {\n    return this.uniforms.texture.value\n  }\n\n  get color() {\n    return this.uniforms.color.value\n  }\n\n  get opacity() {\n    return this.uniforms.opacity.value\n  }\n\n  set opacity(value) {\n    if (this.uniforms) this.uniforms.opacity.value = value\n  }\n}\n\nextend({ CustomMaterial })\n","import React, { forwardRef, useRef } from \"react\"\nimport { useFrame } from \"react-three-fiber\"\nimport lerp from \"lerp\"\nimport \"./CustomMaterial\"\nimport { useBlock } from \"../blocks\"\nimport state from \"../store\"\n\nconst Plane = forwardRef(({ color = \"white\", shift = 1, opacity = 1, args, map, ...props }, ref) => {\n  const { viewportHeight, offsetFactor } = useBlock()\n  const material = useRef()\n  let last = state.top.current\n  useFrame(() => {\n    const { pages, top } = state\n    material.current.scale = lerp(material.current.scale, offsetFactor - top.current / ((pages - 1) * viewportHeight), 0.1)\n    material.current.shift = lerp(material.current.shift, (top.current - last) / shift, 0.1)\n    last = top.current\n  })\n  return (\n    <mesh ref={ref} {...props}>\n      <planeBufferGeometry attach=\"geometry\" args={args} />\n      <customMaterial ref={material} attach=\"material\" color={color} map={map} transparent opacity={opacity} />\n    </mesh>\n  )\n})\n\nexport default Plane\n","import \"./styles.css\"\n\nimport { Block, useBlock } from \"./blocks\"\nimport { Canvas, Dom, useFrame, useLoader } from \"react-three-fiber\"\nimport { LinearFilter, TextureLoader } from \"three\"\nimport { MultilineText, Text } from \"./components/Text\"\nimport React, { Suspense, useEffect, useMemo, useRef } from \"react\"\n\nimport Diamonds from \"./diamonds/Diamonds\"\nimport Plane from \"./components/Plane\"\nimport ReactDOM from \"react-dom\"\nimport lerp from \"lerp\"\nimport state from \"./store\"\n\nfunction Startup() {\n  const ref = useRef()\n  useFrame(() => (ref.current.material.opacity = lerp(ref.current.material.opacity, 0, 0.025)))\n  return <Plane ref={ref} color=\"#0e0e0f\" position={[0, 0, 200]} scale={[100, 100, 1]} />\n}\n\nfunction Paragraph({ image, index, offset, factor, header, aspect, text }) {\n  const { contentMaxWidth: w, canvasWidth, margin, mobile } = useBlock()\n  const size = aspect < 1 && !mobile ? 0.65 : 1\n  const alignRight = (canvasWidth - w * size - margin) / 2\n  const pixelWidth = w * state.zoom * size\n  const left = !(index % 2)\n  const color = index % 2 ? \"#66ff66\" : \"#2FE8C3\"\n  return (\n    <Block factor={factor} offset={offset}>\n      <group position={[left ? -alignRight : alignRight, 0, 0]}>\n        <Plane map={image} args={[1, 1, 32, 32]} shift={75} size={size} aspect={aspect} scale={[w * size, (w * size) / aspect, 1]} frustumCulled={false} />\n        <Dom\n          style={{ width: pixelWidth / (mobile ? 1 : 2), textAlign: left ? \"left\" : \"right\" }}\n          position={[left || mobile ? (-w * size) / 2 : 0, (-w * size) / 2 / aspect - 0.4, 1]}>\n          <div tabIndex={index}>{text}</div>\n        </Dom>\n        <Text left={left} right={!left} size={w * 0.04} color={color} top position={[((left ? -w : w) * size) / 2, (w * size) / aspect / 2 + 0.5, -1]}>\n          {header}\n        </Text>\n        <Block factor={0.2}>\n          <Text opacity={0.5} size={w * 0.1} color=\"#1A1E2A\" position={[((left ? w : -w) / 2) * size, (w * size) / aspect / 1.5, -10]}>\n            {\"0\" + (index + 1)}\n          </Text>\n        </Block>\n      </group>\n    </Block>\n  )\n}\n\nfunction Content() {\n  const images = useLoader(\n    TextureLoader,\n    state.paragraphs.map(({ image }) => image)\n  )\n  useMemo(() => images.forEach(texture => (texture.minFilter = LinearFilter)), [images])\n  const { contentMaxWidth: w, canvasWidth, canvasHeight, mobile } = useBlock()\n  return (\n    <>\n      <Block factor={1} offset={0}>\n        <Block factor={1.2}>\n          <Text left size={w * 0.08} position={[-w / 3.2, 0.5, -1]} color=\"#66ff66\">\n            INFECTED\n          </Text>\n        </Block>\n        <Block factor={1.0}>\n          <Dom position={[-w / 3.2, -w * 0.08 + 0.25, -1]}>It was the year 2076.{mobile ? <br /> : \" \"}The substance had arrived.</Dom>\n        </Block>\n      </Block>\n      <Block factor={1.2} offset={5.7}>\n        <MultilineText top left size={w * 0.15} lineHeight={w / 5} position={[-w / 3.5, 0, -1]} color=\"#2fe8c3\" text={\"four\\nzero\\nfour\"} />\n      </Block>\n      {state.paragraphs.map((props, index) => (\n        <Paragraph key={index} index={index} {...props} image={images[index]} />\n      ))}\n      {state.stripes.map(({ offset, color, height }, index) => (\n        <Block key={index} factor={-1.5} offset={offset}>\n          <Plane args={[50, height, 32, 32]} shift={-4} color={color} rotation={[0, 0, Math.PI / 8]} position={[0, 0, -10]} />\n        </Block>\n      ))}\n      <Block factor={1.25} offset={8}>\n        <Dom className=\"bottom-left\" position={[-canvasWidth / 2, -canvasHeight / 2, 0]}>\n          <a target=\"_blank\" href=\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\">Culture is  your friend.</a>\n        </Dom>\n      </Block>\n    </>\n  )\n}\n\nfunction App() {\n  const scrollArea = useRef()\n  const onScroll = e => (state.top.current = e.target.scrollTop)\n  useEffect(() => void onScroll({ target: scrollArea.current }), [])\n  return (\n    <>\n      <Canvas className=\"canvas\" concurrent pixelRatio={1} orthographic camera={{ zoom: state.zoom, position: [0, 0, 500] }}>\n        <Suspense fallback={<Dom center className=\"loading\" children=\"Loading...\" />}>\n          <Content />\n          <Diamonds />\n          <Startup />\n        </Suspense>\n      </Canvas>\n      <div className=\"scrollArea\" ref={scrollArea} onScroll={onScroll}>\n        {new Array(state.sections).fill().map((_, index) => (\n          <div key={index} id={\"0\" + index} style={{ height: `${(state.pages / state.sections) * 100}vh` }} />\n        ))}\n      </div>\n      <div className=\"frame\">\n        <h1 className=\"frame__title\">Scroll and Refraction</h1>\n        <div className=\"frame__nav\">\n          <a className=\"frame__link\" href=\"#00\" children=\"intro\" />\n          <a className=\"frame__link\" href=\"#01\" children=\"01\" />\n          <a className=\"frame__link\" href=\"#02\" children=\"02\" />\n          <a className=\"frame__link\" href=\"#03\" children=\"03\" />\n          <a className=\"frame__link\" href=\"#04\" children=\"04\" />\n          <a className=\"frame__link\" href=\"#05\" children=\"05\" />\n          <a className=\"frame__link\" href=\"#07\" children=\"06\" />\n        </div>\n      </div>\n    </>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}